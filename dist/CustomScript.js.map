{"version":3,"file":"CustomScript.js","names":["_jszip","_interopRequireDefault","require","pdfjsLib","_interopRequireWildcard","_UniversalItems","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","obj","sidebar","document","querySelector","sidebarToggles","querySelectorAll","loadScript","src","Promise","resolve","reject","script","createElement","includes","textContent","onload","onerror","head","appendChild","loadCSS","href","link","rel","all","then","console","log","beginScript","catch","error","_document$getElementB","erasureType","getElementById","yearSelection","addEventListener","value","style","display","yearsToExport","checked","setProperty","columnIndexToLetter","index","dividend","columnName","modulo","String","fromCharCode","Math","floor","localStorage","getItem","setItem","JSON","stringify","updateLocalStorage","targetElement","draggedElement","local","parse","elemA","parentElement","elemB","colAData","extractDataToObject","colBData","IndividualColumns","id","getFormVal","elem","tagName","type","deepMerge","target","source","key","files","length","disabled","classList","remove","add","translationToName","multiUseValues","forEach","column","listGroupHead","closest","options","part","storedSettings","itemId","keyName","dataset","lsRef","localValue","undefined","settingsToUpdate","updatedSettings","optionValue","comparingTo","comparingToId","contains","allColumns","foundColumn","x","previousType","setDataFromObject","currentColumnData","otherColumnData","element","dataObject","childElements","child","nestedObject","data","keys","childData","nestedData","ref","childElement","concat","getDate","date","year","getFullYear","month","getMonth","padStart","day","item","formattedMin","formattedMax","inputName","input","Date","time","newDate","getTime","max"],"sources":["../src/CustomScript.js"],"sourcesContent":["import JSZip from 'jszip';\r\nimport * as pdfjsLib from 'pdfjs-dist';\r\nimport {IndividualColumns} from \"./UniversalItems\";\r\n\r\n/**\r\n *\r\n */\r\n(function() {\r\n    //'use strict';\r\n\r\n    var sidebar = document.querySelector('.sidebar');\r\n    var sidebarToggles = document.querySelectorAll('#sidebarToggle, #sidebarToggleTop');\r\n\r\n    /* Inject Bootstrap and other libraries */\r\n    /**\r\n     * This loads everything\r\n     * @param src\r\n     * @returns {Promise<unknown>}\r\n     */\r\n    function loadScript(src) {\r\n        return new Promise(function(resolve, reject) {\r\n            let script = document.createElement('script');\r\n            if (!src.includes('https')) {\r\n                script.textContent = src;\r\n            } else {\r\n                script.src = src;\r\n            }\r\n            script.onload = resolve;\r\n            script.onerror = reject;\r\n            document.head.appendChild(script);\r\n        });\r\n    }\r\n\r\n    function loadCSS(href) {\r\n        return new Promise(function(resolve, reject) {\r\n            let link = document.createElement('link');\r\n            link.rel = 'stylesheet';\r\n            link.href = href;\r\n            link.onload = resolve;\r\n            link.onerror = reject;\r\n            document.head.appendChild(link);\r\n        });\r\n    }\r\n\r\n    Promise.all([\r\n        // Waiting for all the JS libraries to load in\r\n        //loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js\"), \r\n        loadScript(\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"),\r\n        loadScript(\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js\"),\r\n        loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.1/jszip.min.js\"),\r\n        loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js\"),\r\n        loadScript(\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js\"),\r\n        //loadScript(themeSwapper),\r\n        loadCSS(\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\"),\r\n        //loadCSS(\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\"),\r\n\r\n\r\n    ]).then(function() {\r\n        // Scripts have finished loading\r\n        console.log('All libraries have finished loading');\r\n        //initializeBootstrapJs();\r\n        beginScript();\r\n    }).catch(function(error) {\r\n        // One or both scripts failed to load\r\n        console.error('Error loading scripts:', error);\r\n    });\r\n\r\n\r\n\r\n    function beginScript() {\r\n\r\n        /* Column Order Dropdowns */\r\n\r\n        /* Delete Data Modal */\r\n        var erasureType = document.getElementById('erasure-type');\r\n        var yearSelection = document.getElementById('year-selection');\r\n\r\n        // Toggle data type to delete\r\n        if (erasureType) {\r\n            erasureType.addEventListener('change', function() {\r\n                // Check if the selected value is \"picked-years\"\r\n                if (this.value === 'individual-years') {\r\n                    // Show the grid of checkboxes for specific years\r\n                    yearSelection.style.display = 'block';\r\n                } else {\r\n                    // Hide the grid of checkboxes for specific years\r\n                    yearSelection.style.display = 'none';\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        //var year\r\n        var yearsToExport = document.getElementById('years-to-export');\r\n        var yearSelection = document.getElementById('exportSpecificYears');\r\n\r\n        // Toggle extra buttons\r\n        if (yearSelection) {\r\n            yearSelection.addEventListener('change', function() {\r\n                // Check if the selected value is \"picked-years\"\r\n                if (this.checked) {\r\n                    // Show the grid of checkboxes for specific years\r\n                    yearsToExport.style.display = 'flex';\r\n                } else {\r\n                    // Hide the grid of checkboxes for specific years\r\n                    yearsToExport.style.display = 'none';\r\n                    // Add !important to ensure it takes precedence\r\n                    yearsToExport.style.setProperty('display', 'none', 'important');\r\n                }\r\n            });\r\n        }\r\n\r\n        function columnIndexToLetter(index) {\r\n            let dividend = index;\r\n            let columnName = '';\r\n            let modulo;\r\n\r\n            while (dividend > 0) {\r\n                modulo = (dividend - 1) % 26;\r\n                columnName = String.fromCharCode(65 + modulo) + columnName;\r\n                dividend = Math.floor((dividend - modulo) / 26);\r\n            }\r\n\r\n            return columnName;\r\n        }\r\n\r\n        // Load settings from local storage\r\n        if (!localStorage.getItem('VSE_settings')) {\r\n            localStorage.setItem('VSE_settings', JSON.stringify({}));\r\n        }\r\n\r\n        function updateLocalStorage(targetElement, draggedElement) {\r\n            var local = JSON.parse(localStorage.getItem('VSE_settings'));\r\n\r\n            var elemA = targetElement.parentElement;\r\n            var elemB = draggedElement.parentElement;\r\n            // We'll swap the values of the two affected columns\r\n            var colAData = extractDataToObject(elemA);\r\n            var colBData = extractDataToObject(elemB);\r\n\r\n            console.log(colAData);\r\n            console.log(colBData);\r\n\r\n            // Now update local storage\r\n            local[IndividualColumns][elemB.id] = colBData[elemB.id];\r\n            local[IndividualColumns][elemA.id] = colAData[elemA.id];\r\n\r\n            localStorage.setItem('VSE_settings', JSON.stringify(local));\r\n        }\r\n\r\n        //addDragAndDrop();\r\n\r\n        function getFormVal(elem) {\r\n            if (elem.tagName === \"SELECT\") {\r\n                return elem.value;\r\n            } else if (elem.tagName === \"INPUT\" && elem.type !== \"checkbox\") {\r\n                return elem.value;\r\n            } else {\r\n                return elem.checked;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * This is for seamlessly combining nested object trees. Target keys are overwritten by matching source keys.\r\n         * @param target\r\n         * @param source\r\n         * @returns {*}\r\n         */\r\n        function deepMerge(target, source) {\r\n            for (const key in source) {\r\n                if (typeof source[key] === 'object' && source[key] !== null) {\r\n                    target[key] = deepMerge(target[key] || {}, source[key]);\r\n                } else {\r\n                    target[key] = source[key];\r\n                }\r\n            }\r\n            return target;\r\n        }\r\n\r\n        /* -- PDF Import related stuff -- */\r\n        document.getElementById('pdf-import')?.addEventListener('change', function() {\r\n            (this.files && this.files.length > 0) ? document.getElementById('pdf-import-button').disabled = false : document.getElementById('pdf-import-button').disabled = true;\r\n            (this.files && this.files.length > 0) ? document.getElementById('pdf-import-button').classList.remove('disabled') : document.getElementById('pdf-import-button').classList.add('disabled');\r\n        });\r\n\r\n\r\n        // All horizontal translations of key data sheet elements\r\n        const translationToName = {\r\n            '38': 'asin',\r\n            '126.91': 'name',\r\n            '372.72': 'orderDate',\r\n            '445.94': 'titleTransferDate',\r\n            '519.16': 'etv'\r\n        }\r\n\r\n        const multiUseValues = ['bold', 'italics', 'underline', 'horizontal', 'vertical', 'fontSize', 'fontColor'];\r\n        /* Checks for making sure settings exist */\r\n        // Loop through each list group\r\n        document.querySelectorAll('#columnManagement .list-group-defaultConfig').forEach(function(column) {\r\n            const listGroupHead = column.closest('.list-group').id;\r\n\r\n            column.querySelectorAll('select, input').forEach(function (options) {\r\n                var part;\r\n                if (options.closest('.custom-header-options')) {\r\n                    part = \"header\";\r\n                } else if (options.closest('.custom-body-options')) {\r\n                    part = \"body\";\r\n                } else {\r\n\r\n                }\r\n\r\n                var storedSettings = JSON.parse(localStorage.getItem('VSE_settings'));\r\n                // Get the corresponding setting from stored settings\r\n                const itemId = options.closest('.list-group-defaultConfig').id;\r\n                const keyName = options.dataset.lsRef;\r\n                const localValue =\r\n                    storedSettings &&\r\n                    (storedSettings[listGroupHead] || storedSettings[itemId] || storedSettings[keyName]) &&\r\n                    (\r\n                        (storedSettings[listGroupHead][itemId] && storedSettings[listGroupHead][itemId][keyName]) ||\r\n                        storedSettings[listGroupHead][keyName] ||\r\n                        (storedSettings[listGroupHead][itemId] && storedSettings[listGroupHead][itemId][part] && storedSettings[listGroupHead][itemId][part][keyName])\r\n                    );\r\n                //console.log(localValue);\r\n                // If it exists, set the dropdown to the stored setting\r\n                if (localValue !== undefined) {\r\n                    if (options.tagName === \"SELECT\" || (options.tagName === \"INPUT\" && options.type !== \"checkbox\")) {\r\n                        options.value = localValue;\r\n                    } else {\r\n                        options.checked = localValue;\r\n                    }\r\n                } else {\r\n                    // otherwise use the value currently selected\r\n                    var settingsToUpdate = {};\r\n                    settingsToUpdate[listGroupHead] = {};\r\n                    if (multiUseValues.includes(keyName)) {\r\n                        settingsToUpdate[listGroupHead][itemId] = {};\r\n                        settingsToUpdate[listGroupHead][itemId][part] = {};\r\n                        settingsToUpdate[listGroupHead][itemId][part][keyName] = getFormVal(options);\r\n                    } else if (itemId !== '') {\r\n                        settingsToUpdate[listGroupHead][itemId] = {};\r\n                        settingsToUpdate[listGroupHead][itemId][keyName] = getFormVal(options);\r\n                    } else if (listGroupHead == '') {\r\n                        settingsToUpdate[itemId] = {};\r\n                        settingsToUpdate[listGroupHead][itemId][keyName] = getFormVal(options);\r\n                    } else {\r\n                        settingsToUpdate[listGroupHead][keyName] = getFormVal(options);\r\n                    }\r\n\r\n                    // Merge new settings with existing stored settings\r\n                    const updatedSettings = deepMerge(storedSettings, settingsToUpdate);\r\n                    localStorage.setItem('VSE_settings', JSON.stringify(updatedSettings));\r\n                }\r\n\r\n                // Add event listener to update stored settings when selection changes\r\n                options.addEventListener('change', function() {\r\n                    var storedSettings = JSON.parse(localStorage.getItem('VSE_settings'));\r\n                    //console.log(options);\r\n                    var settingsToUpdate = {};\r\n                    settingsToUpdate[listGroupHead] = {};\r\n                    var optionValue = getFormVal(options);\r\n                    var comparingTo = this;\r\n                    var comparingToId = this.closest('.list-group-defaultConfig').id;\r\n                    console.log(\"comparingToId: \"+comparingToId);\r\n                    console.log(\"itemId: \"+itemId);\r\n\r\n                    if (comparingTo.classList.contains('data-type-name')) {\r\n                        // the data type is being changed\r\n                        var allColumns = column.closest('.list-group').querySelectorAll('.list-group-defaultConfig');\r\n                        var foundColumn;\r\n                        for (let x=0; x<allColumns.length; x++) {\r\n                            if ((comparingToId !== allColumns[x].id) && (allColumns[x].querySelector('.data-type-name').value === comparingTo.value)) { // ignore the current defaultConfig group\r\n                                // pulling the column with the matching value\r\n                                foundColumn = allColumns[x];\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if ((comparingToId !== foundColumn.id) && (foundColumn.querySelector('.data-type-name').value === comparingTo.value)) { // ignore the current defaultConfig group\r\n\r\n                            // begin swapping group defaultConfig data\r\n                            var previousType = storedSettings[listGroupHead][comparingToId][keyName];\r\n                            comparingTo.value = previousType; // changing the selected value before swapping\r\n\r\n                            // We'll swap the values of the two affected columns\r\n                            var colAData = extractDataToObject(column);\r\n                            var colBData = extractDataToObject(foundColumn);\r\n\r\n                            console.log(colAData);\r\n                            console.log(colBData);\r\n\r\n                            // Update the values in each HTML column\r\n                            setDataFromObject(column, colBData);\r\n                            setDataFromObject(foundColumn, colAData);\r\n\r\n                            // Now update local storage\r\n                            var currentColumnData = storedSettings[listGroupHead][comparingToId];\r\n                            var otherColumnData = storedSettings[listGroupHead][foundColumn.id];\r\n\r\n                            settingsToUpdate[listGroupHead][comparingToId] = otherColumnData;\r\n                            settingsToUpdate[listGroupHead][foundColumn.id] = currentColumnData;\r\n\r\n                            //column.querySelector('[data-ls-ref=\"displayName\"]').value = \"HELLLLLOOOOOOOO\";\r\n\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        console.log(optionValue);\r\n                        if (multiUseValues.includes(keyName)) {\r\n                            settingsToUpdate[listGroupHead][comparingToId] = {};\r\n                            var part;\r\n                            if (this.closest('.custom-header-options')) {\r\n                                part = \"header\";\r\n                            } else {\r\n                                part = \"body\";\r\n                            }\r\n                            settingsToUpdate[listGroupHead][comparingToId][part] = {};\r\n                            settingsToUpdate[listGroupHead][comparingToId][part][keyName] = optionValue;\r\n                        } else if (itemId !== '') {\r\n                            settingsToUpdate[listGroupHead][comparingToId] = {};\r\n                            settingsToUpdate[listGroupHead][comparingToId][keyName] = optionValue;\r\n                        } else if (listGroupHead == '') {\r\n                            settingsToUpdate[comparingToId] = {};\r\n                            settingsToUpdate[listGroupHead][comparingToId][keyName] = optionValue;\r\n                        } else {\r\n                            settingsToUpdate[listGroupHead][keyName] = optionValue;\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"This is settings to update\")\r\n                    console.log(settingsToUpdate)\r\n                    // Merge new settings with existing stored settings\r\n                    //const updatedSettings = deepMerge(storedSettings, settingsToUpdate);\r\n\r\n                    const updatedSettings = deepMerge(JSON.parse(localStorage.getItem('VSE_settings')), settingsToUpdate);\r\n\r\n\r\n                    localStorage.setItem('VSE_settings', JSON.stringify(updatedSettings));\r\n                });\r\n            });\r\n\r\n        });\r\n\r\n        /**\r\n         * For saving the HTML values to an object\r\n         * @param element\r\n         * @returns {{}}\r\n         */\r\n        function extractDataToObject(element) {\r\n            const id = element.id;\r\n            const dataObject = {'header': {}, 'body': {}};\r\n            const childElements = element.querySelectorAll('[data-ls-ref]');\r\n\r\n            childElements.forEach(child => {\r\n                const key = child.dataset.lsRef;\r\n                const value = (child.tagName === 'INPUT' && child.type === 'checkbox') ? child.checked : child.value;\r\n                if (child.closest('.custom-header-options')) {\r\n                    dataObject['header'][key] = value;\r\n                } else if (child.closest('.custom-body-options')) {\r\n                    dataObject['body'][key] = value;\r\n                } else {\r\n                    dataObject[key] = value;\r\n                }\r\n            });\r\n\r\n            const nestedObject = {};\r\n            nestedObject[id] = dataObject;\r\n\r\n            return nestedObject;\r\n        }\r\n\r\n        /**\r\n         * For updating the HTML values to match ones from an object\r\n         * @param element\r\n         * @param data\r\n         */\r\n        function setDataFromObject(element, data) {\r\n            const childElements = element.querySelectorAll('[data-ls-ref]');\r\n\r\n            Object.keys(data).forEach(key => {\r\n                const childData = data[key];\r\n                const nestedData = childData;\r\n\r\n                if (nestedData) {\r\n                    Object.keys(nestedData).forEach(ref => {\r\n                        const childElement = element.querySelector(`[data-ls-ref=\"${ref}\"]`);\r\n                        if (childElement) {\r\n                            if (childElement.tagName === 'INPUT' && childElement.type === 'checkbox') {\r\n                                childElement.checked = nestedData[ref];\r\n                            } else {\r\n                                childElement.value = nestedData[ref];\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n        /* Date and Time Pickers */\r\n        function getDate(date) {\r\n            const year = date.getFullYear();\r\n            const month = String(date.getMonth() + 1).padStart(2, '0'); // Adding 1 because getMonth() returns zero-based month\r\n            const day = String(date.getDate()).padStart(2, '0');\r\n            return `${year}-${month}-${day}`;\r\n        }\r\n        document.querySelectorAll('.custom-export-range').forEach(function(item) {\r\n            var formattedMin, formattedMax;\r\n            if (item.dataset.inputName === \"start\") {\r\n                // Maximum date value\r\n                var input = new Date();\r\n                const time = 24 * 60 * 60 * 1000; // 24 hours in ms\r\n                const newDate = new Date(input.getTime() - time);\r\n                formattedMax = getDate(newDate);\r\n\r\n                // Minimum date value\r\n\r\n            } else {\r\n                // Maximum date value\r\n                formattedMax = getDate(new Date());\r\n            }\r\n\r\n            item.max = formattedMax;\r\n\r\n        })\r\n\r\n\r\n    }\r\n})();\r\n"],"mappings":"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","ignoreList":[]}