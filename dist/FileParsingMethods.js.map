{"version":3,"file":"FileParsingMethods.js","names":["pdfjsLib","_interopRequireWildcard","require","_filterTypes","_exceljs","_interopRequireDefault","_UniversalItems","_jszip","_papaparse","_IndexedDB_Functions","_SettingsTreeFunctions","obj","__esModule","default","_getRequireWildcardCache","e","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","OldItemPositions","NewItemPositions","errorMessages","mainSheet","GlobalWorkerOptions","workerSrc","concat","version","convertDateString","dateString","match1","match","monthStr","dayStr","yearStr","month","Date","parse","getMonth","day","parseInt","year","getTime","match2","convertUnixToDate","unix","dateWithOffset","getTimezoneOffset","finalDate","extractDataFromFile","buffer","fileType","isSpreadsheet","test","pdfHandler","console","log","spreadsheetHandler","csvHandler","Promise","reject","InvalidFileType","resolve","getDocument","promise","then","pdf","extractedText","numPages","promises","push","getPage","page","getTextContent","all","textContents","tried2023Method","forEach","content","textObject","previousXTranslation","counter","createObjectFromRow","item","transformIndex","prodNameIndex","horizontalTranslation","transform","formalName","toString","translationIndexMatches","includes","entries","length","str","items","index","array","NoDataFound","catch","error","translateError","Papa","header","transformHeader","complete","results","data","workbook","ExcelJS","Workbook","xlsx","load","file","worksheet","getWorksheet","rowsData","eachRow","row","rowNumber","rowData","eachCell","cell","colNumber","value","addStatSheet","wb","years","dataTypeIndices","fb","dataAsArray","currYear","getFullYear","t_gap","addWorksheet","cellFormula","monthRows","weekdayRows","hourRows","etvRows","etvCountRows","totalEtvRows","c_Arr","calcRowLength","odc","columnIndexToLetter","indexOf","ec","osc","y","formula","cFromN","columnName","base","remainder","String","fromCharCode","Math","floor","t_title","sheet","c","title","mergeCells","getCell","font","bold","alignment","horizontal","c_addHeaders","c_List","columns","name","totalsRowFunction","c_Row","t_months","addTable","ref","headerRow","totalsRow","style","theme","showFirstColumn","rows","t_days","t_hours","t_etv","t_etvTotal","showLastColumn","t_itemCounts","findKeysMatchingRegex","regex","matchingKeys","key","prototype","ejsSheet","DELETED_PLACEHOLDER","userSettings","JSON","localStorage","getItem","dataTypeIndexes","map","dataType","orderDateIndex","AMZ_COLOR","AMZ_DARK_COLOR","DEFAULT_HYPERLINK","exportOnlyCurrentYear","range","database","PerformDbOperation","dbToExport","RowFormatting","modifiedRow","keyName","parseFloat","convertedDate","orderDate","dateCheck","sort","b","createExcelSheet","settings","dataColumnConfigs","tableColumns","DataTypes","find","subitem","headerName","fbSetting","filterButton","table","showRowStripes","returnSetting","path","resultIfNull","result","keys","split","defaultSetting","reduce","columnSettings","getColumn","hidden","width","includeEmpty","url","tooltip","cellType","numFmt","base64Img","imageId","addImage","base64","extension","tl","col","ext","height","getRow","findIndex","asin","dataValidation","type","allowBlank","formulae","text","hyperlink","createFontSettings","options","italic","underline","correctedColor","size","color","argb","slice","vertical","views","state","xSplit","ySplit","defaultName","newName","writeBuffer","blob","Blob","URL","createObjectURL","downloadLink","document","createElement","href","download","click","revokeObjectURL","testSheet","cellData","addRows","writeFile","formattedError","message","cleanUpObjectData","parsedData","uniqueObjects","asinMap","Map","removedHeaders","filter","object","orderStatusDate","etv","existingObj","isDifferentDate","isNegativeEtv","orderStatus","values","exportSettingsToJson","localStorageData","output","tableTheme","columnManagement","columnDefaults","exports","parseZipFile","zip","JSZip","loadAsync","contents","relativePath","async","getElementById","innerHTML"],"sources":["../src/FileParsingMethods.js"],"sourcesContent":["import * as pdfjsLib from \"pdfjs-dist\";\r\nimport {text} from \"react-table/src/filterTypes\";\r\nimport ExcelJS from 'exceljs';\r\nimport {columnIndexToLetter, DataTypes, IndividualColumns} from \"./UniversalItems\";\r\nimport JSZip from \"jszip\";\r\nimport Papa from 'papaparse';\r\nimport {PerformDbOperation} from \"./IndexedDB_Functions\";\r\nimport {checkSettingsTree} from \"./SettingsTreeFunctions\";\r\n\r\n/**\r\n * All horizontal translations of parseable data for Itemized Reports generated for 2022 and earlier.\r\n *\r\n * orderStatusDate is Title Transfer Date.\r\n *\r\n * The only reason I'm not calling it Title Transfer Date is because the latter is only ever used in older PDFs.\r\n * Plus, its only use is determining when an order was REMOVED or CANCELLED.\r\n * @type {{\"38\": string, \"445.94\": string, \"126.91\": string, \"519.16\": string, \"372.72\": string}}\r\n */\r\nconst OldItemPositions = {\r\n    '38': 'asin',\r\n    '126.91': 'name',\r\n    '372.72': 'orderDate',\r\n    '445.94': 'orderStatusDate', // \"Title Transfer Date\"\r\n    '519.16': 'etv'\r\n}\r\n\r\n/**\r\n * All horizontal translations of parseable data for Itemized Reports generated for 2023 and later\r\n *\r\n * Uses index 5 instead of 4.\r\n *\r\n * orderStatusDate is Cancelled Date. The reason is that this is used to determine when an order was REMOVED or CANCELLED.\r\n * @type {{\"746.4\": string, \"592.4\": string, \"138.1\": string, \"38\": string, \"423\": string, \"669.4\": string, \"230.5\": string, \"515.4\": string}}\r\n */\r\nconst NewItemPositions = {\r\n    '38': 'orderID',\r\n    '138.1': 'asin',\r\n    '230.5': 'name',\r\n    '423': 'orderStatus',\r\n    '515.4': 'orderDate',\r\n    '592.4': 'dateShipped',\r\n    '669.4': 'orderStatusDate', // \"Cancelled Date\"\r\n    '746.4': 'etv'\r\n}\r\n\r\nconst errorMessages = {\r\n    'NoDataFound': { 'shortMsg': 'No Vine data found.', 'longMsg': 'You likely imported a file with no discernible Vine data. Remember only to import Itemized Reports that you downloaded from your Vine Account tab.' },\r\n    'InvalidPDFException': { 'shortMsg': 'Corrupted or invalid PDF.', 'longMsg': 'This PDF is either corrupted or contains broken data that cannot be parsed. The only supported PDFs are Itemized Reports.' },\r\n    'InvalidFileType': { 'shortMsg': 'Invalid or unsupported file type.', 'longMsg': 'Email and spreadsheets are not supported yet. The only currently supported filetypes are: PDFs.' }\r\n}\r\n\r\n/**\r\n * The sheet name for the Orders sheet\r\n * @type {string}\r\n */\r\nconst mainSheet = 'My Sheet';\r\n\r\n// Set worker source URL for pdf.js\r\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.js`;\r\n\r\nfunction convertDateString(dateString) {\r\n    // Parse date string in the format \"MMM D, YYYY\" (e.g., \"Jan 1, 2024\")\r\n    const match1 = dateString.match(/^(\\w{3}) (\\d{1,2}), (\\d{4})$/);\r\n    if (match1) {\r\n        const [, monthStr, dayStr, yearStr] = match1;\r\n        const month = new Date(Date.parse(`${monthStr} 1, 2000`)).getMonth() + 1; // Convert month abbreviation to number\r\n        const day = parseInt(dayStr);\r\n        const year = parseInt(yearStr);\r\n        return new Date(year, month - 1, day).getTime(); // Months are zero-based in JavaScript Date object\r\n    }\r\n\r\n    // Parse date string in the format \"MM/DD/YYYY\" (e.g., \"09/03/2024\")\r\n    const match2 = dateString.match(/^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/);\r\n    if (match2) {\r\n        const [, monthStr, dayStr, yearStr] = match2;\r\n        const month = parseInt(monthStr);\r\n        const day = parseInt(dayStr);\r\n        const year = parseInt(yearStr);\r\n        return new Date(year, month - 1, day).getTime(); // Months are zero-based in JavaScript Date object\r\n    }\r\n\r\n    return null; // Return null if the date string does not match any supported format\r\n}\r\n\r\n/**\r\n * Converts a unix/epoch timestamp to a proper date with the correct timezone offset\r\n * @param unix\r\n * @returns {Date}\r\n */\r\nfunction convertUnixToDate(unix) {\r\n    const dateWithOffset = (new Date(unix).getTimezoneOffset() * 60 * 1000);\r\n    const finalDate = new Date(unix - dateWithOffset)\r\n    return finalDate;\r\n}\r\n\r\nasync function extractDataFromFile(buffer, fileType) {\r\n\r\n    const isSpreadsheet = /(xlsx|officedocument\\.spreadsheet)/.test(fileType);\r\n\r\n    if (/pdf/.test(fileType)) {\r\n        return pdfHandler(buffer);\r\n    } else if (/(xlsx|officedocument\\.spreadsheet)/.test(fileType)) {\r\n        console.log('This is a spreadsheet')\r\n        await spreadsheetHandler(buffer);\r\n    } else if (/(csv)/.test(fileType)) {\r\n        console.log('This is a CSV')\r\n        const test = await csvHandler(buffer);\r\n        console.log(test);\r\n    } else {\r\n        return Promise.reject(errorMessages.InvalidFileType);\r\n    }\r\n    /*\r\n    switch (fileType) {\r\n        case 'application/pdf':\r\n            return pdfHandler(buffer);\r\n        case isSpreadsheet://'application/xlsx':\r\n            return spreadsheetHandler(buffer);\r\n            //return parseSpreadsheet(buffer);\r\n\r\n        case 'application/zip':\r\n            return parseEmails(buffer);\r\n        default:\r\n            return Promise.reject(errorMessages.InvalidFileType);\r\n    }*/\r\n\r\n}\r\n\r\n// -- PDF extraction --\r\n/**\r\n * Handles all Itemized Report PDFs, both the old version and the new one.\r\n * @param buffer\r\n * @returns {Promise<unknown>}\r\n */\r\nfunction pdfHandler(buffer) {\r\n    return new Promise((resolve, reject) => {\r\n        // -- Load the PDF using PDF.js --\r\n        pdfjsLib.getDocument(buffer).promise.then(function (pdf) {\r\n            // Initialize array to store extracted text objects\r\n            const extractedText = [];\r\n\r\n            // Iterate through each page of the PDF\r\n            const numPages = pdf.numPages;\r\n            const promises = [];\r\n            for (let i = 1; i <= numPages; i++) {\r\n                // Retrieve text content of each page\r\n                promises.push(pdf.getPage(i).then(function (page) {\r\n                    return page.getTextContent();\r\n                }));\r\n            }\r\n\r\n            // Resolve all promises once text content of all pages is retrieved\r\n            Promise.all(promises).then(function (textContents) {\r\n\r\n                let tried2023Method = false;\r\n\r\n                textContents.forEach(function (content) {\r\n\r\n                    // Initialize object to store extracted text for this page\r\n                    let textObject = {};\r\n                    let previousXTranslation;\r\n                    let counter = 0;\r\n\r\n                    function createObjectFromRow(item, transformIndex, prodNameIndex) {\r\n\r\n                        const horizontalTranslation = item.transform[transformIndex];\r\n                        const formalName = (transformIndex === 4) ? OldItemPositions[horizontalTranslation.toString()] : NewItemPositions[horizontalTranslation.toString()];\r\n                        // The 2023 pdf has a weird issue where it just ignores the last row of a page\r\n                        const translationIndexMatches = (transformIndex === 4) ? [38].includes(horizontalTranslation) : [38, 546.66].includes(horizontalTranslation);\r\n\r\n                        //console.log(defaultConfig);\r\n\r\n                        if (counter > 3 && translationIndexMatches && Object.entries(textObject).length > 0) {\r\n                            // We're at the beginning again, so time to create a new object to export\r\n                            counter = 0;\r\n                            // Add text object for this page to the extractedText array\r\n                            extractedText.push(textObject);\r\n                            //console.log('Finished: ', textObject);\r\n                            textObject = {};\r\n                        } else {\r\n                            //console.log('Not finished: ', textObject);\r\n                            //console.log('Horizontal translation: ', horizontalTranslation);\r\n                        }\r\n\r\n                        if (formalName) {\r\n\r\n                            // Check if the current formal name matches the previous one\r\n                            if (previousXTranslation === horizontalTranslation && horizontalTranslation === prodNameIndex) {\r\n                                // Add a space between the previous and current string (only for product name)\r\n                                textObject[formalName] += ' ' + item.str;\r\n                            } else if (previousXTranslation === horizontalTranslation) {\r\n                                // Concatenate the previous and current string without a space\r\n                                textObject[formalName] += '' + item.str;\r\n                            } else {\r\n                                // Add string to the corresponding key in the text object\r\n                                textObject[formalName] = item.str;\r\n                            }\r\n                            previousXTranslation = horizontalTranslation;\r\n                        }\r\n\r\n                        counter++;\r\n\r\n                    }\r\n\r\n                    // Process each defaultConfig in the content\r\n                    // This only gets lines of text\r\n                    content.items.forEach(function (item, index, array) {\r\n                        //console.log(defaultConfig);\r\n                        createObjectFromRow(item, 4, 126.91);\r\n                    });\r\n\r\n                    if (textObject.length > 0) {\r\n                        // Export the last object to the array\r\n                        extractedText.push(textObject);\r\n                    } else {\r\n                        // Try the 2023 method\r\n                        content.items.forEach(function (item, index, array) {\r\n                            //console.log('Trying 2023 method');\r\n                            createObjectFromRow(item, 5, 230.5);\r\n                        });\r\n                        if (textObject.length > 0) {\r\n                            //console.log(textObject);\r\n                            // Export the object to the array\r\n                            extractedText.push(textObject);\r\n                        }\r\n                    }\r\n\r\n                });\r\n\r\n                if (extractedText.length > 0) {\r\n                    // Resolve with the extracted text object\r\n                    resolve(extractedText);\r\n                } else {\r\n                    // Otherwise return an error if nothing was extracted\r\n                    reject(errorMessages.NoDataFound);\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                console.log('Error at text promises');\r\n                reject(translateError(error));\r\n            });\r\n        }).catch(function (error) {\r\n            console.log('Pdfjslib error.');\r\n            reject(translateError(error));\r\n        });\r\n    });\r\n}\r\n\r\nfunction csvHandler(buffer) {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n        const test = Papa.parse(buffer, {\r\n            header: true,\r\n            transformHeader: header => {\r\n                // Convert headers before they're turned into object key names\r\n\r\n                // -- Compare against custom headers specified in settings\r\n\r\n                // -- Compare against base regex\r\n                if (header === 'OriginalHeaderName') {\r\n                    return 'NewHeaderName';\r\n                } else {\r\n                    return header;\r\n                }\r\n            },\r\n            complete: (results) => {\r\n                resolve(results.data);\r\n            }\r\n        });\r\n    })\r\n}\r\n\r\nfunction spreadsheetHandler(buffer) {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        // Create a new workbook object\r\n        const workbook = new ExcelJS.Workbook();\r\n\r\n        // -- Load the spreadsheet using ExcelJS --\r\n        workbook.xlsx.load(buffer).then(function (file) {\r\n            // Get the first worksheet in the workbook\r\n            const worksheet = workbook.getWorksheet(1); // Assuming it's the first worksheet\r\n\r\n            // Define an array to store the parsed data\r\n            const rowsData = [];\r\n\r\n            // Iterate over each row in the worksheet\r\n            worksheet.eachRow((row, rowNumber) => {\r\n                // Define an object to store cell values for the current row\r\n                const rowData = {};\r\n\r\n                // Iterate over each cell in the row\r\n                row.eachCell((cell, colNumber) => {\r\n                    // Store the value of the cell in the rowData object\r\n                    rowData[`Column${colNumber}`] = cell.value;\r\n                });\r\n\r\n                // Push the rowData object to the rowsData array\r\n                rowsData.push(rowData);\r\n            });\r\n\r\n            console.log(rowsData)\r\n\r\n            // Return the parsed data\r\n            if (rowsData.length > 0) {\r\n                // Resolve with the extracted text object\r\n                resolve(rowsData);\r\n            } else {\r\n                // Otherwise return an error if nothing was extracted\r\n                reject(errorMessages.NoDataFound);\r\n            }\r\n\r\n\r\n        }).catch(function (error) {\r\n            console.log('ExcelJS error.');\r\n            reject(translateError(error));\r\n        });\r\n    });\r\n}\r\n\r\nfunction addStatSheet(wb, years, dataTypeIndices) {\r\n    const fb = false;\r\n\r\n    let dataAsArray = [];\r\n    let currYear = new Date().getFullYear();\r\n    let t_gap = 4;\r\n    // gap between tables\r\n\r\n\r\n    // Add a worksheet\r\n    const worksheet = wb.addWorksheet('Stats');\r\n    /*\r\n    // Create a new table with headers\r\n    const temptable = worksheet.addTable({\r\n        name: 'Stats1',\r\n        ref: 'A2',\r\n        headerRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11', // Dark4 is just slathering the table in green\r\n            showRowStripes: true,\r\n        },\r\n        columns: [\r\n            { name: '$0', filterButton: fb },\r\n            { name: '$0.01 - $100', filterButton: fb },\r\n            { name: '$100+', filterButton: fb },\r\n            { name: 'Cancelled', filterButton: fb },\r\n            { name: 'Defective', filterButton: fb },\r\n            { name: 'Other', filterButton: fb },\r\n            { name: 'Daily', filterButton: fb },\r\n            { name: 'Weekly', filterButton: fb },\r\n            { name: 'Monthly', filterButton: fb }\r\n        ],\r\n        rows: dataAsArray\r\n    });\r\n*/\r\n\r\n    /*\r\n    function formulaeLoop(formula, expr1, expr2, expr3) {\r\n\r\n    }\r\n*/\r\n    let cellFormula;\r\n\r\n    //let etvTotalsRow = [];\r\n    let monthRows = [];\r\n    let weekdayRows = [];\r\n    let hourRows = [];\r\n    let etvRows = [];\r\n    let etvCountRows = [];\r\n    let totalEtvRows = [];\r\n    let row = [];\r\n    let c_Arr;\r\n    let calcRowLength = 2;\r\n\r\n\r\n    const odc = columnIndexToLetter(dataTypeIndices.indexOf('orderDate')+1); // \"Order Date Column\"\r\n    const ec = columnIndexToLetter(dataTypeIndices.indexOf('etv')+1); // \"ETV Column\"\r\n    const osc = columnIndexToLetter(dataTypeIndices.indexOf('orderStatus')+1); // \"Order Status Column\"\r\n\r\n    /* Creating the tables by adding rows for each year */\r\n    for (let y = currYear; y > 2006; y--) {\r\n        // ascending order\r\n        if (years.includes(y)) {\r\n            // monthly\r\n            row.push(y);\r\n            // adds the first column with the year\r\n            for (let i = 1; i < 13; i++) {\r\n                cellFormula = (i === 12) ? `=COUNTIFS('${mainSheet}'!${odc}:${odc},\">=\"&DATE(${y},${i},1),'${mainSheet}'!${odc}:${odc},\"<\"&DATE(${y + 1},1,1))` : `=COUNTIFS('${mainSheet}'!${odc}:${odc},\">=\"&DATE(${y},${i},1),'${mainSheet}'!${odc}:${odc},\"<\"&DATE(${y},${i + 1},1))`;\r\n                //cellFormula = `=COUNTIFS('${mainSheet}'!${odc}:${odc},\">=\"&DATE(${y},${i},1),'${mainSheet}'!${odc}:${odc},\"<=\"&DATE(${y},${i},31))`;\r\n\r\n                row.push({\r\n                    formula: cellFormula\r\n                });\r\n            }\r\n            monthRows.push(row);\r\n            row = [];\r\n            // weekdays\r\n            row.push(y);\r\n            for (let i = 1; i < 8; i++) {\r\n                cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<DATE(${y + 1},1,1))*(WEEKDAY('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})),1)=${i}))`;\r\n                //cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<=DATE(${y},12,31))*(WEEKDAY('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})),1)=${d}))`;\r\n                row.push({\r\n                    formula: cellFormula\r\n                });\r\n            }\r\n            weekdayRows.push(row);\r\n            row = [];\r\n\r\n            // by the hour\r\n            row.push(y);\r\n            for (let i = 0; i < 24; i++) {\r\n                cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<DATE(${y + 1},1,1))*(HOUR('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})))=${i}))`;\r\n                //cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<=DATE(${y},12,31))*(WEEKDAY('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})),1)=${d}))`;\r\n                //cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:${odc}>=DATE(2023,1,1))*('${mainSheet}'!${odc}2:${odc}<=DATE(2023,12,31))*(HOUR('${mainSheet}'!${odc}2:${odc})=1))`;\r\n                row.push({\r\n                    formula: cellFormula\r\n                });\r\n            }\r\n            hourRows.push(row);\r\n            row = [];\r\n\r\n            // by etv range\r\n            row.push(y);\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${ec}:${ec},0,'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${ec}:${ec},\">=0.01\",'${mainSheet}'!${ec}:${ec},\"<=100\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${ec}:${ec},\">100\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n\r\n            etvRows.push(row);\r\n            row = [];\r\n\r\n            // ETV totals\r\n            row.push(y);\r\n            //cellFormula = `=COUNTIFS('${mainSheet}'!${osc}:${osc},\"None\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            cellFormula = `=SUMIFS('${mainSheet}'!${ec}:${ec}, '${mainSheet}'!${odc}:${odc}, \">=1/1/${y}\", '${mainSheet}'!${odc}:${odc}, \"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=SUMIFS('${mainSheet}'!${ec}:${ec}, '${mainSheet}'!${osc}:${osc}, \"Cancelled\", '${mainSheet}'!${odc}:${odc}, \">=1/1/${y}\", '${mainSheet}'!${odc}:${odc}, \"<=12/31/${y}\") * -1`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=SUMIFS('${mainSheet}'!${ec}:${ec}, '${mainSheet}'!${osc}:${osc}, \"Defective\", '${mainSheet}'!${odc}:${odc}, \">=1/1/${y}\", '${mainSheet}'!${odc}:${odc}, \"<=12/31/${y}\") * -1`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=SUMIFS('${mainSheet}'!${ec}:${ec}, '${mainSheet}'!${osc}:${osc}, \"<>*None\", '${mainSheet}'!${osc}:${osc}, \"<>*Cancelled\", '${mainSheet}'!${osc}:${osc}, \"<>*Defective\", '${mainSheet}'!${odc}:${odc}, \">=1/1/${y}\", '${mainSheet}'!${odc}:${odc}, \"<=12/31/${y}\") * -1`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=SUMIFS('${mainSheet}'!${ec}:${ec}, '${mainSheet}'!${osc}:${osc}, \"None\", '${mainSheet}'!${odc}:${odc}, \">=1/1/${y}\", '${mainSheet}'!${odc}:${odc}, \"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n\r\n            totalEtvRows.push(row);\r\n            row = [];\r\n\r\n            // Total items based on exclusion; i.e. # of cancelled, # of defective, etc.\r\n            row.push(y);\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${osc}:${osc},\"None\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${osc}:${osc},\"Cancelled\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${osc}:${osc},\"Defective\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${osc}:${osc},\"<>*None\",'${mainSheet}'!${osc}:${osc},\"<>*Cancelled\",'${mainSheet}'!${osc}:${osc},\"<>*Defective\",'${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            // accounts for anything else, like \"Other\" or a custom input\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n            cellFormula = `=COUNTIFS('${mainSheet}'!${odc}:${odc},\">=1/1/${y}\",'${mainSheet}'!${odc}:${odc},\"<=12/31/${y}\")`;\r\n            row.push({\r\n                formula: cellFormula\r\n            });\r\n\r\n            etvCountRows.push(row);\r\n            row = [];\r\n\r\n            //`=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<DATE(${y+1},1,1))*(HOUR('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})))=None))`;\r\n            /*for (let i=0; i<5; i++) {\r\n                cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<DATE(${y+1},1,1))*(HOUR('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})))=${i}))`;\r\n                //cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))>=DATE(${y},1,1))*('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc}))<=DATE(${y},12,31))*(WEEKDAY('${mainSheet}'!${odc}2:INDEX('${mainSheet}'!${odc}:${odc},COUNTA('${mainSheet}'!${odc}:${odc})),1)=${d}))`;\r\n                //cellFormula = `=SUMPRODUCT(('${mainSheet}'!${odc}2:${odc}>=DATE(2023,1,1))*('${mainSheet}'!${odc}2:${odc}<=DATE(2023,12,31))*(HOUR('${mainSheet}'!${odc}2:${odc})=1))`;\r\n                row.push({ formula: cellFormula });\r\n            }\r\n            totalEtvRows.push(row);\r\n            row = [];\r\n*/\r\n\r\n        }\r\n    }\r\n\r\n    function cFromN(n) {\r\n        let columnName = '';\r\n        const base = 26;\r\n\r\n        while (n > 0) {\r\n            const remainder = (n - 1) % base;\r\n            columnName = String.fromCharCode(65 + remainder) + columnName;\r\n            // 'A' corresponds to 65 in ASCII\r\n            n = Math.floor((n - 1) / base);\r\n        }\r\n\r\n        return columnName;\r\n    }\r\n\r\n    // making titles for tables\r\n    function t_title(sheet, c, r, title) {\r\n        //const\r\n        sheet.mergeCells(`B ${r}:${c}${r}`);\r\n        sheet.getCell(`${c}${r}`).value = title;\r\n        sheet.getCell(`${c}${r}`).font = {\r\n            bold: true\r\n        };\r\n        sheet.getCell(`${c}${r}`).alignment = {\r\n            horizontal: 'center'\r\n        };\r\n    }\r\n\r\n    function c_addHeaders(c_List) {\r\n        let columns = [{\r\n            name: ' '\r\n        }];\r\n\r\n        for (let i = 0; i < c_List.length; i++) {\r\n            columns.push({\r\n                name: c_List[i],\r\n                totalsRowFunction: 'sum'\r\n            });\r\n        }\r\n        return columns;\r\n\r\n    }\r\n\r\n    //formulaeLoop(monthExpr\r\n    /*\r\n\r\n    worksheet.mergeCells('B1:N1');\r\n    worksheet.getCell('N1').value = 'Number of Items Requested by Month';\r\n    worksheet.getCell('N1').font = { bold: true };\r\n    worksheet.getCell('N1').alignment = { horizontal: 'center' };\r\n*/\r\n\r\n    let c_Row = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n    c_Arr = c_addHeaders(c_Row);\r\n    /*\r\n    c_Arr = [\r\n        { name: ' ' },\r\n        { name: 'Jan', totalsRowFunction: 'sum' },\r\n        { name: 'Feb', totalsRowFunction: 'sum' },\r\n        { name: 'Mar', totalsRowFunction: 'sum' },\r\n        { name: 'Apr', totalsRowFunction: 'sum' },\r\n        { name: 'May', totalsRowFunction: 'sum' },\r\n        { name: 'June', totalsRowFunction: 'sum' },\r\n        { name: 'July', totalsRowFunction: 'sum' },\r\n        { name: 'Aug', totalsRowFunction: 'sum' },\r\n        { name: 'Sep', totalsRowFunction: 'sum' },\r\n        { name: 'Oct', totalsRowFunction: 'sum' },\r\n        { name: 'Nov', totalsRowFunction: 'sum' },\r\n        { name: 'Dec', totalsRowFunction: 'sum' }\r\n    ];\r\n\r\n*/\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), 1, 'Number of Items Requested by Month');\r\n\r\n    // Table with monthly item request stats\r\n    const t_months = worksheet.addTable({\r\n        name: 'MonthStats',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: monthRows\r\n    });\r\n\r\n    calcRowLength += years.length + t_gap;\r\n\r\n    /* Item count by day of week table */\r\n\r\n    c_Row = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thur\", \"Fri\", \"Sat\"];\r\n    c_Arr = c_addHeaders(c_Row);\r\n    /*\r\n    c_Arr = [\r\n        { name: ' ' },\r\n        { name: 'Sun', totalsRowFunction: 'sum' },\r\n        { name: 'Mon', totalsRowFunction: 'sum' },\r\n        { name: 'Tues', totalsRowFunction: 'sum' },\r\n        { name: 'Wed', totalsRowFunction: 'sum' },\r\n        { name: 'Thur', totalsRowFunction: 'sum' },\r\n        { name: 'Fri', totalsRowFunction: 'sum' },\r\n        { name: 'Sat', totalsRowFunction: 'sum' }\r\n    ];\r\n*/\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), (calcRowLength - 1), 'Number of Items Requested by Weekday');\r\n\r\n    const t_days = worksheet.addTable({\r\n        name: 'DayStats',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: weekdayRows\r\n    });\r\n\r\n    calcRowLength += years.length + t_gap;\r\n\r\n    /* Item count by hour table */\r\n    c_Arr = [{\r\n        name: ' '\r\n    }, {\r\n        name: '12 AM',\r\n        totalsRowFunction: 'sum'\r\n    }];\r\n\r\n    for (let i = 1; i < 24; i++) {\r\n        (i < 12) ? c_Arr.push({\r\n            name: `${i} AM`,\r\n            totalsRowFunction: 'sum'\r\n        }) : (i === 12) ? c_Arr.push({\r\n            name: `${i} PM`,\r\n            totalsRowFunction: 'sum'\r\n        }) : c_Arr.push({\r\n            name: `${i - 12} PM`,\r\n            totalsRowFunction: 'sum'\r\n        });\r\n    }\r\n\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), (calcRowLength - 1), 'Number of Items Requested by Hour');\r\n\r\n    const t_hours = worksheet.addTable({\r\n        name: 'HourStats',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: hourRows\r\n    });\r\n\r\n    calcRowLength += years.length + t_gap;\r\n\r\n    /* Item count by ETV range */\r\n    c_Arr = [{\r\n        name: ' '\r\n    }, {\r\n        name: '$0',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: '1¢ - $100',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: '> $100',\r\n        totalsRowFunction: 'sum'\r\n    }];\r\n\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), (calcRowLength - 1), 'Number of Items Requested by ETV');\r\n\r\n    /* Item count by ETV table */\r\n    const t_etv = worksheet.addTable({\r\n        name: 'ETVRanges',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: etvRows\r\n    });\r\n\r\n    calcRowLength += years.length + t_gap;\r\n\r\n    /* ETV totals based on exclusion and final total */\r\n    c_Arr = [{\r\n        name: ' '\r\n    }, {\r\n        name: 'Subtotal',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Cancelled',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Defective',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Other',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Final',\r\n        totalsRowFunction: 'sum'\r\n    }];\r\n\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), (calcRowLength - 1), 'ETV Totals');\r\n\r\n    const t_etvTotal = worksheet.addTable({\r\n        name: 'ETVTotals',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true,\r\n            showLastColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: totalEtvRows\r\n    });\r\n\r\n    calcRowLength += years.length + t_gap;\r\n\r\n    /* Number of items based on exclusion */\r\n    c_Arr = [{\r\n        name: ' '\r\n    }, {\r\n        name: 'Included',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Cancelled',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Defective',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Other',\r\n        totalsRowFunction: 'sum'\r\n    }, {\r\n        name: 'Total',\r\n        totalsRowFunction: 'sum'\r\n    }];\r\n\r\n    t_title(worksheet, cFromN(c_Arr.length + 1), (calcRowLength - 1), 'Total Number of Items Requested');\r\n\r\n    const t_itemCounts = worksheet.addTable({\r\n        name: 'ItemTotals',\r\n        ref: `B ${calcRowLength}`,\r\n        headerRow: true,\r\n        totalsRow: true,\r\n        style: {\r\n            theme: 'TableStyleMedium11',\r\n            showFirstColumn: true,\r\n            showLastColumn: true\r\n        },\r\n        columns: c_Arr,\r\n        rows: etvCountRows\r\n    });\r\n\r\n    /* base formula for # of items by ETV:\r\n    $0: =COUNTIFS('${mainSheet}'!${ec}:${ec},0,'${mainSheet}'!${odc}:${odc},\">=1/1/2023\",'${mainSheet}'!${odc}:${odc},\"<=12/31/2023\")\r\n\r\n    base formula FOR # OF EXCLUDED ORDERS:\r\n\r\n    Cancelled: =COUNTIFS('${mainSheet}'!${osc}:${osc},\"Cancelled\",'${mainSheet}'!${odc}:${odc},\">=1/1/2023\",'${mainSheet}'!${odc}:${odc},\"<=12/31/2023\")\r\n\r\n    NOTE: Replace 2023 with the actual year in the row\r\n\r\n    */\r\n\r\n}\r\n\r\n\r\nfunction findKeysMatchingRegex(obj, regex) {\r\n    const matchingKeys = [];\r\n    for (const key in obj) {\r\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n            if (regex.test(key)) {\r\n                matchingKeys.push(key);\r\n            }\r\n        }\r\n    }\r\n    return matchingKeys;\r\n}\r\n\r\nasync function ejsSheet() {\r\n\r\n    const DELETED_PLACEHOLDER = \"Deleted Product\";\r\n    // Create a new worksheet\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(mainSheet);\r\n\r\n    const userSettings = JSON.parse(localStorage.getItem('VSE_settings'));\r\n\r\n    const dataTypeIndexes = {};\r\n    const dataTypeIndices = userSettings['columnManagement'].map((item) => {\r\n        return item.dataType;\r\n    })\r\n\r\n    const orderDateIndex = dataTypeIndices.indexOf('orderDate');// TODO: Get this from settings\r\n    /*\r\n        userSettings.forEach((item, index) => {\r\n            dataTypeIndexes[item.dataType] = index;\r\n        })*/\r\n\r\n    const AMZ_COLOR = \"007185\";\r\n    const AMZ_DARK_COLOR = \"00A9C7\";\r\n    const DEFAULT_HYPERLINK = \"0000EE\";\r\n\r\n    const exportOnlyCurrentYear = false; // TODO: Set this to reflect user setting\r\n\r\n    // TODO: Update this to make it optional\r\n    const range = (exportOnlyCurrentYear) ? [new Date().getFullYear()] : [2021, 2022, 2023];//GM_getValue(\"config\").years_to_export;\r\n\r\n    // -- Pull the necessary data from the database --\r\n    const database = await PerformDbOperation('getAll');\r\n\r\n    let dbToExport = database;\r\n\r\n    // -- Returns an array with the datatypes in the correct order (as indicated in settings by the user) --\r\n    const RowFormatting = (row) => {\r\n        return dataTypeIndices.map(index => row[index]);\r\n        //return [row.photo, row.asin, row.name, row.orderID, new Date(parseInt(row.orderDate - getOffset(row.orderDate))), row.etv, row.excluded, row.reason, row.deleted];\r\n    }\r\n\r\n    // -- Going to make necessary changes before exporting (i.e. converting dates, parsing numbers, etc.) --\r\n    dbToExport = database.map((row) => {\r\n        //console.log('Row: ', row)\r\n        let modifiedRow = row;\r\n\r\n        // Converting unix to dates\r\n        findKeysMatchingRegex(modifiedRow, /(date)/i).forEach((keyName) => {\r\n            modifiedRow[keyName] = convertUnixToDate(parseInt(modifiedRow[keyName]));\r\n        });\r\n\r\n        // Converting etvs to float\r\n        findKeysMatchingRegex(modifiedRow, /(etv)/i).forEach((keyName) => {\r\n            modifiedRow[keyName] = parseFloat(modifiedRow[keyName]);\r\n        });\r\n\r\n        const convertedDate = new Date(parseInt(row.orderDate)).getFullYear();\r\n        const dateCheck = range.includes(convertedDate);\r\n\r\n        // Only exporting row if:\r\n        // a) exportCurrentYear is not enabled OR\r\n        // b) exportCurrentYear is enabled and the order date falls within the current year\r\n        if (!exportOnlyCurrentYear || (exportOnlyCurrentYear && dateCheck !== -1)) {\r\n            return RowFormatting(row);\r\n        }\r\n    });\r\n\r\n    // -- Sort the database by order date in descending order --\r\n    dbToExport.sort((a, b) => b[orderDateIndex] - a[orderDateIndex]);\r\n\r\n    console.log('db before export:', dbToExport)\r\n\r\n    // -- Create the spreadsheet --\r\n    createExcelSheet(dbToExport);\r\n\r\n    function createExcelSheet(dataAsArray) {\r\n\r\n        const settings = JSON.parse(localStorage.getItem('VSE_settings'));\r\n        const dataColumnConfigs = userSettings['columnManagement'];\r\n\r\n        const tableColumns = dataColumnConfigs.map((item, index) => {\r\n            // only adding filter buttons to specific columns\r\n            const test = DataTypes.find(subitem => subitem.value === item.dataType);\r\n            const headerName = (item?.['displayName']) ? item['displayName'] : DataTypes.find(subitem => subitem.value === item.dataType)['name'];//DataTypes.find(subitem => subitem.dataType === item.dataType);\r\n            const fbSetting = !!(item.dataType.match(/(product name|date|etv)/i));\r\n            return {name: headerName, filterButton: fbSetting};\r\n        })\r\n\r\n        // Create a new table with headers\r\n        const table = worksheet.addTable({\r\n            name: 'Orders',\r\n            ref: 'A1',\r\n            headerRow: true,\r\n            style: {\r\n                theme: (userSettings?.['tableTheme']) ? userSettings['tableTheme'] : null,\r\n                showRowStripes: true,\r\n            },\r\n            columns: tableColumns,\r\n            rows: dataAsArray\r\n        });\r\n\r\n        // TODO: Revise this after adding in \"Apply to custom columns\" button\r\n        function returnSetting(path, index, resultIfNull) {\r\n            let result = null;\r\n            // Split the string into individual keys\r\n            const keys = path.split('.');\r\n\r\n            const defaultSetting = keys.reduce((obj, key) => obj && obj[key], userSettings['columnDefaults']);\r\n\r\n            // Returning default settings if override is enabled\r\n            if (userSettings['columnDefaults']['overrideCustomColumns'] === true) {\r\n                return defaultSetting;\r\n            } else {\r\n\r\n                // Access the nested property using bracket notation\r\n                result = keys.reduce((obj, key) => obj && obj[key], dataColumnConfigs[index]);\r\n\r\n                if (!result) {\r\n                    result = defaultSetting;\r\n\r\n                    if (!result) {\r\n                        result = resultIfNull;\r\n                    }\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n\r\n        // TODO: Needs major improvements\r\n        dataColumnConfigs.forEach((columnSettings, index) => {\r\n            const i = index+1;\r\n\r\n            // Setting column to hidden based on setting\r\n            worksheet.getColumn(i).hidden = returnSetting('isHidden', index, false);\r\n\r\n            // Setting column width\r\n            worksheet.getColumn(columnIndexToLetter(i)).width = (columnSettings?.['colWidth']) ? columnSettings['colWidth'] : 12;\r\n\r\n            worksheet.getColumn(columnIndexToLetter(i)).eachCell({ includeEmpty: true }, (cell, rowNumber) => {\r\n                if (cell.value) {\r\n\r\n                    let url, tooltip;\r\n                    let cellType;\r\n                    if (rowNumber > 1) {\r\n                        // Apply Body formatting\r\n                        cellType = 'body';\r\n\r\n                        if (columnSettings.dataType.match(/(date)/i)) {\r\n                            // Apply date formatting to dates\r\n                            cell.numFmt = '[$-en-US]m/d/yyyy h:mm AM/PM;@';\r\n\r\n                        } else if (columnSettings.dataType === \"etv\") {\r\n                            // Format \"etv\" column as currency\r\n                            cell.numFmt = '$#,##0.00';\r\n\r\n                        } else if (columnSettings.dataType === \"photo\") {\r\n                            // For photos\r\n                            if (!cell.value.includes('amazon')) {\r\n                                const base64Img = cell.value;\r\n                                const imageId = workbook.addImage({\r\n                                    base64: base64Img,\r\n                                    extension: 'jpeg',\r\n                                });\r\n                                //const url = `https://www.amazon.com/dp/${cell.value}`;\r\n                                worksheet.addImage(imageId, {\r\n                                    tl: { col: 0, row: rowNumber-1 }, // need to figure out how to discern column later\r\n                                    ext: { width: 79, height: 79 }\r\n                                });\r\n                            }\r\n\r\n                            // Adjust the height to match img\r\n                            // ExcelJS doesn't support inserting images directly into cells\r\n                            table.getRow(rowNumber).height = 60;\r\n                            cell.value = null;\r\n\r\n                        } else if (columnSettings.dataType === \"orderID\") {\r\n\r\n                            tooltip = 'View your order on Amazon';\r\n                            // Add correct hyperlinks to Order ID\r\n                            if (cell.value.includes(\"-\")) {\r\n                                // default order page\r\n                                url = `https://www.amazon.com/gp/your-account/order-details?orderID=${cell.value}`;\r\n                            } else if (cell.value.length > 0) {\r\n                                // the unique Vine order page\r\n                                //let asin = worksheet.getCell(`B ${rowNumber}`);\r\n                                const c = columnIndexToLetter(dataColumnConfigs.findIndex(item => item.asin === \"asin\"));\r\n                                let asin = worksheet.getCell(`${c} ${rowNumber}`);\r\n                                url = `https://www.amazon.com/vine/orders/${cell.value}?enrollment-asin=${asin}`;\r\n                            }\r\n                            /*\r\n                            if (url) {\r\n                                const currCol = columnIndexToLetter(i);\r\n                                const text = cell.value.text;\r\n                                console.log(' HERE IS TEXT',text)\r\n                                worksheet.getCell(`${currCol}${rowNumber}`).value = {\r\n                                    text: text,\r\n                                    hyperlink: url,\r\n                                    tooltip: 'View your order on Amazon',\r\n                                }\r\n                            }*/\r\n\r\n\r\n                        } else if (columnSettings.dataType === \"excluded\") {\r\n                            // Add dropdowns for Exclude column\r\n                            cell.dataValidation = {\r\n                                type: 'list',\r\n                                allowBlank: false,\r\n                                formulae: ['\"FALSE, TRUE\"']\r\n                            };\r\n                        } else if (columnSettings.dataType === \"orderStatus\") {\r\n                            // Add dropdowns for Order Status (formerly Exclude Reason) column\r\n                            cell.dataValidation = {\r\n                                type: 'list',\r\n                                allowBlank: false,\r\n                                formulae: ['\"None, Cancelled, Removed, Defective, Other\"']\r\n                            };\r\n                        }\r\n\r\n\r\n                        if (url && cell.value) {\r\n                            const text = cell.value;\r\n                            cell.value = {\r\n                                text: text,\r\n                                hyperlink: url,\r\n                                tooltip: tooltip,\r\n                            };\r\n                        } else {\r\n                            /*\r\n                            cell.value = {\r\n                                text: cell.value\r\n                            };*/\r\n                        }\r\n\r\n                    } else {\r\n                        // Apply Header formatting\r\n                        cellType = 'header';\r\n                    }\r\n\r\n                    function createFontSettings(cell, options) {\r\n                        for (const obj in options) {\r\n                            cell[obj] = options[obj];\r\n                        }\r\n\r\n                    }\r\n\r\n                    /**\r\n                     * Another bug with ExcelJS:\r\n                     *\r\n                     * Applying any kind of font setting overrides the font color of the table theme\r\n                     */\r\n\r\n                    // Testing if it works without affecting font color\r\n                    const test = {bold: true, italic: true, underline: false};\r\n\r\n                    if (cellType === 'header') {\r\n                        for (const obj in test) {\r\n                            cell.obj = test[obj];\r\n                        }\r\n                        //createFontSettings(cell, test);\r\n                    }\r\n\r\n                    const correctedColor = returnSetting(cellType+'.fontColor', index, null)\r\n                    cell.font = {\r\n                        bold: returnSetting(cellType+'.bold', index, false),\r\n                        italic: returnSetting(cellType+'.italics', index, false),\r\n                        underline: returnSetting(cellType+'.underline', index, false),\r\n                        size: returnSetting(cellType+'.fontSize', index, 11),\r\n                        color: {\r\n                            argb: (correctedColor) ? correctedColor.slice(1) : null\r\n                        }\r\n                    };\r\n\r\n                    cell.alignment = {\r\n                        vertical: returnSetting(cellType+'.vertical', index, 'top'),\r\n                        horizontal: returnSetting(cellType+'.horizontal', index, 'left'),\r\n                        //wrapText: returnSetting('header.horizontal', index, false),\r\n                        //shrinkToFit: returnSetting('header.horizontal', index, false),\r\n                        //textRotation: returnSetting('header.horizontal', index, 0),\r\n                    }\r\n\r\n                }\r\n            })\r\n        })\r\n\r\n        /*\r\n        // Total ETV cell\r\n        worksheet.getCell('J1').value = {\r\n            formula: '\"Total ETV: $\"&TEXT(SUMIF(G:G, FALSE(), F:F),\"#,##0.00\")'\r\n        };\r\n        worksheet.columns[9].width = 24;\r\n        */\r\n\r\n\r\n        /*\r\n        // adds an expression to cross out ETVs that are excluded\r\n        worksheet.addConditionalFormatting({\r\n            ref: 'E2:E',\r\n            rules: [\r\n                {\r\n                    type: 'expression',\r\n                    formulae: ['$F2=TRUE'],\r\n                    style: {strike: true },\r\n                }\r\n            ]\r\n        })\r\n        */\r\n\r\n        // Freeze header row\r\n        worksheet.views = [{\r\n            state: 'frozen',\r\n            xSplit: 0,\r\n            ySplit: 1\r\n        }];\r\n\r\n        /* Other stats to add:\r\n    * Total ETV - while ignoring excluded items\r\n    * Total # of products - maybe something like <# of products not excluded>/<total # of products REQUESTED> (e.g. 30/54\r\n\r\n    Other stats I'm interested in adding:\r\n\r\n    * # of $0 ETV products / all products\r\n    * Average ETV per week/month?\r\n    * Average number of items requested per week/month?\r\n    * Days, weeks, months of most/least activity?\r\n    * Times throughout the day you requested more items\r\n    * Total cost of excluded orders\r\n\r\n    Other stats that could be included but require more data:\r\n\r\n    * How many orders you cancelled throughout the year.\r\n    *\r\n\r\n    */\r\n        /* optional add-ons */\r\n        if (userSettings['enableStatsSheet']) {\r\n            addStatSheet(workbook, range, dataTypeIndices);\r\n        }\r\n\r\n        // set name of download\r\n        const defaultName = 'ETV Spreadsheet';\r\n        const newName = defaultName;\r\n        // might concatenate the years to the spreadsheet name\r\n\r\n        // generate blob\r\n        workbook.xlsx.writeBuffer().then(function(buffer) {\r\n            const blob = new Blob([buffer],{\r\n                type: 'application/octet-stream'\r\n            });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            // create a new anchor element and click it to download the blob\r\n            const downloadLink = document.createElement('a');\r\n            downloadLink.href = url;\r\n            downloadLink.download = newName + '.xlsx';\r\n            downloadLink.click();\r\n\r\n            // clean up the object URL to free memory\r\n            URL.revokeObjectURL(url);\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\r\nfunction testSheet() {\r\n    // Create a new workbook\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet('Sheet1');\r\n\r\n// Generate cells with formatting\r\n    const cellData = [\r\n        { value: 'Value 1', font: { bold: true } },\r\n        { value: 'Value 2', font: { italic: true } },\r\n        // Add more cells with formatting as needed\r\n    ];\r\n\r\n// Insert the cells into the table\r\n    worksheet.addRows(cellData);\r\n\r\n// Save the workbook\r\n    workbook.xlsx.writeFile('example.xlsx')\r\n        .then(() => {\r\n            console.log('Workbook created successfully.');\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error creating workbook:', error);\r\n        });\r\n}\r\n\r\n\r\n/**\r\n * For translating errors into layman's terms for the user\r\n * @param error\r\n * @returns {*|{shortMsg: string, longMsg}}\r\n */\r\nfunction translateError(error) {\r\n\r\n    console.log(error);\r\n    if (errorMessages[error.name]) {\r\n        return errorMessages[error.name];\r\n    } else {\r\n        const formattedError = {'shortMsg': 'Unknown error.', 'longMsg': error.message};\r\n        return formattedError;\r\n    }\r\n}\r\n\r\n/**\r\n * Use this for cleaning up object data that is compiled from extractDataFromFile()\r\n * This should work universally with all file types due to it only handling objects\r\n */\r\nfunction cleanUpObjectData(parsedData, fileType){\r\n\r\n    const uniqueObjects = [];\r\n    const asinMap = new Map();\r\n\r\n    // Remove header objects if the data was parsed from a PDF\r\n    let removedHeaders = (/pdf/.test(fileType)) ? parsedData.filter(obj => obj['asin'] !== 'ASIN') : parsedData;\r\n\r\n    // Converting all date/time values to Epoch timestamps\r\n    let extractedText = removedHeaders.map(obj => {\r\n        // Iterate over the keys of each object\r\n        Object.keys(obj).forEach(key => {\r\n            // Check if the value is a string and can be parsed as a date\r\n            if (typeof obj[key] === 'string' && key.match(/date/i)) {\r\n                // Convert the date string to a Unix timestamp and replace the value\r\n                obj[key] = convertDateString(obj[key]);\r\n            }\r\n\r\n        });\r\n        return obj;\r\n    });\r\n\r\n    // Now begin adding/updating objects to/in the map\r\n    extractedText.forEach(object => {\r\n        let obj = object;\r\n        const { asin, orderDate, orderStatusDate, etv } = obj;\r\n\r\n        // Note about orderStatus: It's probably best to just assume the order was cancelled if its corresponding orderStatusDate is less than 24 hours from the time of orderDate.\r\n\r\n\r\n        if (!asinMap.has(asin)) {\r\n            // ASIN data is NEW\r\n            if (obj['orderStatusDate'] === obj['orderDate'] && parseInt(obj['etv']) < 0) {\r\n                // Title transfer date and order date match, so this MUST be a CANCELLED order\r\n                obj['orderStatus'] = 'Cancelled';\r\n            } else if (parseInt(obj['etv']) < 0) {\r\n                // negative ETV could mean anything\r\n                obj['orderStatus'] = 'Removed';\r\n            }\r\n\r\n            if (parseInt(obj['etv']) < 0) {\r\n                // use the original etv if the current one is negative\r\n                obj.etv = String(parseInt(obj['etv']) * -1);\r\n            }\r\n\r\n        } else {\r\n            // ASIN data ALREADY EXISTS in the map\r\n            const existingObj = asinMap.get(asin);\r\n            const isDifferentDate = existingObj.orderStatusDate !== orderStatusDate;\r\n            const isNegativeEtv = etv < 0;\r\n\r\n            // We automatically assume duplicate means order was removed\r\n            obj['orderStatus'] = 'Removed';\r\n\r\n            if (existingObj.orderStatusDate !== existingObj.orderDate) {\r\n                // use the original title transfer date if it's different\r\n                obj.orderStatusDate = existingObj.orderStatusDate;\r\n            }\r\n\r\n            if (obj.orderStatusDate === obj.orderDate && parseInt(obj['etv']) <= 0) {\r\n                // Dates aren't different, but etv is negative, which means it's a CANCELLED order\r\n                obj['orderStatus'] = 'Cancelled';\r\n            }\r\n\r\n            if (parseInt(obj['etv']) < 0) {\r\n                // use the original etv if the current one is negative\r\n                obj.etv = existingObj.etv;\r\n            }\r\n\r\n        }\r\n\r\n        if (obj.orderDate) {\r\n            obj.orderDate = obj.orderDate.toString();\r\n        }\r\n\r\n        // TODO: Need to look over this. It's possibly causing issues with items that appear in 2 pdfs to not list the orderStatus and date correctly\r\n        if (obj.orderStatusDate || obj.orderStatus) {\r\n            //console.log('THIS IS UPDATED ORDER STATUS');\r\n            (obj.orderStatusDate) ? obj.orderStatusDate = obj.orderStatusDate.toString() : obj.orderStatusDate = obj.orderDate.toString();\r\n        }\r\n\r\n        // Add object to map if 'asin' is not already present\r\n        asinMap.set(asin, obj);\r\n\r\n    });\r\n\r\n    // Extract unique objects from the map\r\n    for (const obj of asinMap.values()) {\r\n\r\n        // Cleaning up objects that have: orderStatus of \"ORDER\" OR an orderStatusDate but no orderStatus\r\n        if ((obj.orderStatus && obj.orderStatus === \"ORDER\") || (obj.hasOwnProperty('orderStatusDate') && !obj.hasOwnProperty('orderStatus'))) {\r\n            // Remove order status keys that just say \"ORDER\"\r\n            // \"ORDER\" is just the default for any non-removed orders\r\n            delete obj.orderStatus;\r\n            delete obj.orderStatusDate;\r\n        }\r\n\r\n        uniqueObjects.push(obj);\r\n    }\r\n\r\n    return uniqueObjects;\r\n\r\n\r\n    /*\r\n        Decide what to overwrite:\r\n        * Product name - the order sheet usually contains the info from the time it was ordered, so its accuracy is dependable.\r\n\r\n        Don't overwrite:\r\n        * Order date - this only has month/day/year\r\n    *\r\n    * */\r\n\r\n\r\n}\r\n\r\nconst exportSettingsToJson = (type) => {\r\n    try {\r\n        // TODO: Include options for exporting column configs, default config, or ALL settings.\r\n        let localStorageData = JSON.parse(localStorage.getItem('VSE_settings'));\r\n        let output;\r\n        //const { tableTheme, columnManagement, columnDefaults } = localStorageData;\r\n\r\n        switch (type) {\r\n            case 'all': // export everything\r\n                //output = localStorageData;\r\n                break;\r\n            case 'style': // export only spreadsheet styling-related settings\r\n                const { tableTheme, columnManagement, columnDefaults } = localStorageData;\r\n                output = { tableTheme, columnManagement, columnDefaults };\r\n                break;\r\n            default:\r\n                output = localStorageData;\r\n                break;\r\n\r\n        }\r\n        //console.log(output);\r\n        return output;\r\n        /*\r\n        try {\r\n            const parsedData = JSON.parse(localStorageData);\r\n            const jsonData = JSON.stringify(parsedData, null, 2); // Indentation level of 2 spaces\r\n            const blob = new Blob([jsonData], { type: 'application/json' });\r\n            const url = URL.createObjectURL(blob);\r\n\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.download = 'VSE Settings.json'; // Default file name\r\n\r\n            document.body.appendChild(link);\r\n            link.click();\r\n\r\n            document.body.removeChild(link);\r\n            URL.revokeObjectURL(url);\r\n        } catch (error) {\r\n            console.error('Error exporting settings:', error);\r\n        }\r\n        */\r\n    } catch (error) {\r\n        console.error(error);\r\n        //console.error('Strange, you don\\'t have any settings...');\r\n    }\r\n}\r\n\r\nfunction parseZipFile(file) {\r\n\r\n    // Use JSZip to parse the contents of the zip file\r\n    const zip = new JSZip();\r\n    zip.loadAsync(file)\r\n        .then(function(contents) {\r\n            console.log('Zip file loaded successfully');\r\n\r\n            // Iterate through each file in the zip\r\n            contents.forEach(function(relativePath, file) {\r\n                // Display the file name and content\r\n                file.async('string').then(function(content) {\r\n                    console.log('File:', relativePath);\r\n                    console.log('Content:', content);\r\n\r\n                    // You can perform further processing with the content here\r\n                    document.getElementById('output').innerHTML += `<p>${relativePath}: ${content}</p>`;\r\n                });\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.error('Error reading zip file:', error);\r\n        });\r\n}\r\n\r\n\r\n\r\nexport { extractDataFromFile, cleanUpObjectData, exportSettingsToJson, ejsSheet }"],"mappings":"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","ignoreList":[]}