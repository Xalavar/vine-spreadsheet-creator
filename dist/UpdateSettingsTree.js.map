{"version":3,"file":"UpdateSettingsTree.js","names":["updateSettingsTree","path","value","obj","JSON","parse","localStorage","getItem","keys","split","nestedObj","i","length","key","isArrayIndex","test","Array","isArray","finalKey","parseInt","setItem","stringify","checkSettingsTree"],"sources":["../src/UpdateSettingsTree.js"],"sourcesContent":["/* == For reading and updating local storage values ==*/\r\n\r\n// Path: 'key.nestedKey.evenMoreNestedKey...'\r\n/**\r\n * Updates a setting in the settings tree in local storage.\r\n *\r\n * Usage: 'key.nestedKey.evenMoreNestedKey'\r\n * @param path\r\n * @param value\r\n */\r\nexport function updateSettingsTree(path, value) {\r\n    let obj = JSON.parse(localStorage.getItem('VSE_settings')) || {}; // Initialize as empty object if not found\r\n    const keys = path.split('.'); // Split the path into keys\r\n\r\n    // Traverse the object based on the keys, creating nested objects if necessary\r\n    let nestedObj = obj;\r\n    for (let i = 0; i < keys.length - 1; i++) {\r\n        const key = keys[i];\r\n        // Check if the current key represents an array index\r\n        const isArrayIndex = /^\\d+$/.test(key);\r\n        if (!(key in nestedObj) && !isArrayIndex) {\r\n            nestedObj[key] = {}; // Create nested object if not already present\r\n        } else if (isArrayIndex && !Array.isArray(nestedObj)) {\r\n            nestedObj = []; // Initialize as array if not already an array\r\n        }\r\n        nestedObj = nestedObj[key]; // Move deeper into the nested object or array\r\n    }\r\n\r\n    // Handle the final key\r\n    const finalKey = keys[keys.length - 1];\r\n    if (Array.isArray(nestedObj) && /^\\d+$/.test(finalKey)) {\r\n        // Handle array index assignment\r\n        nestedObj[parseInt(finalKey)] = value;\r\n    } else {\r\n        // Update the value at the final key\r\n        nestedObj[finalKey] = value;\r\n    }\r\n\r\n    // Store the updated object back into local storage\r\n    localStorage.setItem('VSE_settings', JSON.stringify(obj));\r\n}\r\n\r\n/**\r\n * Checks the settings tree in local storage. Intended for retrieving values at specific locations, if they exist.\r\n *\r\n * Usage: 'key.nestedKey.evenMoreNestedKey'\r\n * @param path\r\n * @returns {any|{}|null}\r\n */\r\nexport function checkSettingsTree(path) {\r\n    let obj = JSON.parse(localStorage.getItem('VSE_settings')) || {}; // Initialize as empty object if not found\r\n    const keys = path.split('.'); // Split the path into keys\r\n\r\n    // Traverse the object based on the keys\r\n    let nestedObj = obj;\r\n    for (let key of keys) {\r\n        if (!(key in nestedObj)) {\r\n            return null; // Path does not exist, return null\r\n        }\r\n        nestedObj = nestedObj[key]; // Move deeper into the nested object\r\n    }\r\n\r\n    return nestedObj; // Return the value found at the specified path\r\n}\r\n"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,kBAAkBA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC5C,IAAIC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAClE,MAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE9B;EACA,IAAIC,SAAS,GAAGP,GAAG;EACnB,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;IACtC,MAAME,GAAG,GAAGL,IAAI,CAACG,CAAC,CAAC;IACnB;IACA,MAAMG,YAAY,GAAG,OAAO,CAACC,IAAI,CAACF,GAAG,CAAC;IACtC,IAAI,EAAEA,GAAG,IAAIH,SAAS,CAAC,IAAI,CAACI,YAAY,EAAE;MACtCJ,SAAS,CAACG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM,IAAIC,YAAY,IAAI,CAACE,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,EAAE;MAClDA,SAAS,GAAG,EAAE,CAAC,CAAC;IACpB;IACAA,SAAS,GAAGA,SAAS,CAACG,GAAG,CAAC,CAAC,CAAC;EAChC;;EAEA;EACA,MAAMK,QAAQ,GAAGV,IAAI,CAACA,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;EACtC,IAAII,KAAK,CAACC,OAAO,CAACP,SAAS,CAAC,IAAI,OAAO,CAACK,IAAI,CAACG,QAAQ,CAAC,EAAE;IACpD;IACAR,SAAS,CAACS,QAAQ,CAACD,QAAQ,CAAC,CAAC,GAAGhB,KAAK;EACzC,CAAC,MAAM;IACH;IACAQ,SAAS,CAACQ,QAAQ,CAAC,GAAGhB,KAAK;EAC/B;;EAEA;EACAI,YAAY,CAACc,OAAO,CAAC,cAAc,EAAEhB,IAAI,CAACiB,SAAS,CAAClB,GAAG,CAAC,CAAC;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASmB,iBAAiBA,CAACrB,IAAI,EAAE;EACpC,IAAIE,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EAClE,MAAMC,IAAI,GAAGP,IAAI,CAACQ,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE9B;EACA,IAAIC,SAAS,GAAGP,GAAG;EACnB,KAAK,IAAIU,GAAG,IAAIL,IAAI,EAAE;IAClB,IAAI,EAAEK,GAAG,IAAIH,SAAS,CAAC,EAAE;MACrB,OAAO,IAAI,CAAC,CAAC;IACjB;IACAA,SAAS,GAAGA,SAAS,CAACG,GAAG,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOH,SAAS,CAAC,CAAC;AACtB","ignoreList":[]}